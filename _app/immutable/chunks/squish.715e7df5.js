import{S as P,i as S,s as V,e as b,b as N,E as w,g as h,v as z,d as v,f as F,h as p,a9 as I,G,k,l as y,m as g,n as m,p as E,C as J,_ as L,J as O,L as Q,M as Z,N as j,P as M,Z as _,F as A,V as B}from"./index.1ee62562.js";import{o as H,f as q,Q as C}from"./store.ab085cd1.js";function D(o){let t,s,r,n,e,a,u;const c=o[5].default,f=G(c,o,o[4],null);return{c(){t=k("div"),s=k("div"),f&&f.c(),this.h()},l(i){t=y(i,"DIV",{class:!0,draggable:!0});var l=g(t);s=y(l,"DIV",{class:!0});var d=g(s);f&&f.l(d),d.forEach(p),l.forEach(p),this.h()},h(){m(s,"class","modal-content svelte-lczuqy"),E(s,"--width",o[1]),m(t,"class","backdrop svelte-lczuqy"),m(t,"draggable","false")},m(i,l){N(i,t,l),J(t,s),f&&f.m(s,null),e=!0,a||(u=[L(H.call(null,s)),w(s,"outclick",o[2]),w(s,"click",O(o[6]))],a=!0)},p(i,l){f&&f.p&&(!e||l&16)&&Q(f,c,i,i[4],e?j(c,i[4],l,null):Z(i[4]),null),l&2&&E(s,"--width",i[1])},i(i){e||(h(f,i),M(()=>{e&&(r||(r=_(s,q,{y:-200},!0)),r.run(1))}),M(()=>{e&&(n||(n=_(t,C,{},!0)),n.run(1))}),e=!0)},o(i){v(f,i),r||(r=_(s,q,{y:-200},!1)),r.run(0),n||(n=_(t,C,{},!1)),n.run(0),e=!1},d(i){i&&p(t),f&&f.d(i),i&&r&&r.end(),i&&n&&n.end(),a=!1,A(u)}}}function K(o){let t,s,r,n,e=o[0]&&D(o);return{c(){e&&e.c(),t=b()},l(a){e&&e.l(a),t=b()},m(a,u){e&&e.m(a,u),N(a,t,u),s=!0,r||(n=w(window,"keyup",o[3]),r=!0)},p(a,[u]){a[0]?e?(e.p(a,u),u&1&&h(e,1)):(e=D(a),e.c(),h(e,1),e.m(t.parentNode,t)):e&&(z(),v(e,1,1,()=>{e=null}),F())},i(a){s||(h(e),s=!0)},o(a){v(e),s=!1},d(a){e&&e.d(a),a&&p(t),r=!1,n()}}}function R(o,t,s){let{$$slots:r={},$$scope:n}=t,{width:e="auto"}=t,{open:a=!1}=t;const u=I(),c=l=>{var d;s(0,a=!1),u("close"),(d=l==null?void 0:l.detail)==null||d.stopPropagation()},f=l=>{l.key=="Escape"&&(l.preventDefault(),l.stopPropagation(),c())};function i(l){B.call(this,o,l)}return o.$$set=l=>{"width"in l&&s(1,e=l.width),"open"in l&&s(0,a=l.open),"$$scope"in l&&s(4,n=l.$$scope)},[a,e,c,f,n,r,i]}class W extends P{constructor(t){super(),S(this,t,R,K,V,{width:1,open:0})}}const X=(o,{delay:t=0,duration:s=500})=>{const n=getComputedStyle(o).width.match(/([\d.]+)(.*)/);if(!n)return{delay:t,duration:s,css:a=>`max-width: unset; width: ${a*100}%;`};const e=Number.parseFloat(n[1]);return{delay:t,duration:s,css:a=>`max-width: unset; width: ${a*e}${n[2]}; min-width: unset;`}};export{W as M,X as s};
