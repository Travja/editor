var S=Object.defineProperty;var R=(t,e,s)=>e in t?S(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var i=(t,e,s)=>(R(t,typeof e!="symbol"?e+"":e,s),s);import{w as n}from"./index-9051baca.js";import{K as p}from"./index-e95dc92a.js";const k={INT:/^-?[0-9]+$/,FLOAT:/^-?[0-9]+\.[0-9]+$/,SPACE:/^( +)/},c=t=>{const e=t.match(k.SPACE);return e?e[1].length:0};class a{constructor(e){i(this,"key");i(this,"data",{});i(this,"put",(e,s)=>{this.data[e]=s});i(this,"has",e=>this.data[e]!==void 0);i(this,"get",(e,s)=>this.has(e)?this.data[e]:s);i(this,"parse",(e,s,r)=>{for(;s<e.length&&c(e[s])>=r;){for(;s<e.length&&(c(e[s])!=r||e[s].replace(/ /g,"").charAt(0)=="#"||e[s].indexOf(":")==-1);)s++;if(s==e.length)return s;const m=e[s].substring(r,e[s].indexOf(":"));if(e[s].indexOf(": {}")==e[s].length-4&&e[s].length>=4)this.data[m]={};else if(s<e.length-1&&e[s+1].charAt(r)=="-"&&e[s+1].charAt(r+1)==" "&&c(e[s+1])==r){const o=[];for(;++s<e.length&&e[s].charAt(r)=="-";){let l=e[s].substring(r+2);(l.charAt(0)=="'"||l.charAt(0)=='"')&&(l=l.substring(1,l.length-1)),o.push(l)}this.data[m]=o,s--}else if(s<e.length-1&&c(e[s+1])>r){s++;const o=c(e[s]),l=new a;s=l.parse(e,s,o)-1,this.data[m]=l}else{let o=e[s].substring(e[s].indexOf(":")+2);o.charAt(0)=="'"?o=o.substring(1,o.length-1):isNaN(o)||(k.INT.test(o)?o=parseInt(o):o=parseFloat(o)),this.data[m]=o}do s++;while(s<e.length&&e[s].replace(/ /g,"").charAt(0)=="#")}return s});this.key=e}}class u{constructor(e){i(this,"isClass",!0);i(this,"key",{});i(this,"name","Class");i(this,"prefix");i(this,"group","class");i(this,"manaName","&2Mana");i(this,"maxLevel",40);i(this,"parent");i(this,"permission",!1);i(this,"expSources",[]);i(this,"health",20);i(this,"healthModifier",0);i(this,"mana",20);i(this,"manaModifier",0);i(this,"manaRegen",1);i(this,"attributes",{});i(this,"skillTree","Requirement");i(this,"skills",[]);i(this,"icon",{material:"Pumpkin",customModelData:0});i(this,"unusableItems",[]);i(this,"actionBar","");i(this,"serializeYaml",()=>{const e=new a(this.name),s=new a;return s.put("name",this.name),s.put("prefix",this.prefix),s.put("group",this.group),s.put("manaName",this.manaName),s.put("maxLevel",this.maxLevel),this.parent&&s.put("parent",this.parent.name),s.put("permission",this.permission),s.put("expSources",this.expSources),s.put("mana-regen",this.manaRegen),s.put("tree",this.skillTree),s.put("blacklist",this.unusableItems),s.put("icon",this.icon.material),s.put("icon-data",this.icon.customModelData),s.put("icon-lore",this.icon.lore),s.put("action-bar",this.actionBar),s.put("skills",this.skillTree),s.put("attributes",this.attributes),s.put("health-base",this.health),s.put("health-scale",this.healthModifier),s.put("mana-base",this.mana),s.put("mana-scale",this.manaModifier),e.data=s.data,e});e!=null&&e.name&&(this.name=e.name),e!=null&&e.prefix&&(this.prefix=e.prefix),e!=null&&e.group&&(this.group=e.group),e!=null&&e.manaName&&(this.manaName=e.manaName),e!=null&&e.maxLevel&&(this.maxLevel=e.maxLevel),e!=null&&e.parent&&(this.parent=e.parent),e!=null&&e.permission&&(this.permission=e.permission),e!=null&&e.expSources&&(this.expSources=e.expSources),e!=null&&e.health&&(this.health=e.health),e!=null&&e.healthModifier&&(this.healthModifier=e.healthModifier),e!=null&&e.mana&&(this.mana=e.mana),e!=null&&e.manaModifier&&(this.manaModifier=e.manaModifier),e!=null&&e.manaRegen&&(this.manaRegen=e.manaRegen),e!=null&&e.attributes&&(this.attributes=e.attributes),e!=null&&e.skillTree&&(this.skillTree=e.skillTree),e!=null&&e.skills&&(this.skills=e.skills),e!=null&&e.icon&&(this.icon=e.icon),e!=null&&e.unusableItems&&(this.unusableItems=e.unusableItems),e!=null&&e.actionBar&&(this.actionBar=e.actionBar)}}class g{constructor(e){this.isSkill=!0,this.key={},this.serializeYaml=()=>{const s=new a;return s.data.name=this.name,s},this.name=e.name,this.type=e.type,this.maxLevel=e.maxLevel,this.skillReq=e.skillReq,this.skillReqLevel=e.skillReqLevel,this.permission=e.permission,this.levelReq=e.levelReq,this.levelReqModifier=e.levelReqModifier,this.cost=e.cost,this.costModifier=e.costModifier,this.cooldown=e.cooldown,this.cooldownModifier=e.cooldownModifier,this.cooldownMessage=e.cooldownMessage,this.mana=e.mana,this.manaModifier=e.manaModifier,this.minSpent=e.minSpent,this.minSpentModifier=e.minSpentModifier,this.castMessage=e.castMessage,this.combo=e.combo,this.indicator=e.indicator,this.icon=e.icon,this.incompatible=e.incompatible,this.triggers=e.triggers}}class h{constructor(e){this.key={},this.isFolder=!0,this.open=!1,this.name="Folder",this.data=[],this.updateParent=s=>{this.parent=s},this.addFolder=()=>{const s=new h;this.data.push(s),this.data=this.data.sort((r,m)=>r instanceof h?-1:0),s.updateParent(this)},this.deleteFolder=s=>{this.data=this.data.filter(r=>r!=s)},e&&(this.data=e,e.forEach(s=>{s instanceof h&&s.isFolder&&s.updateParent(this)}))}}const y=n(),D=n(),M=n(!0),v=n(!0),q=n(!1);let b=[new g({name:"Particle Blast",type:"Dynamic",maxLevel:40,permission:!1,levelReq:1,levelReqModifier:0,cost:0,costModifier:0,cooldown:0,cooldownModifier:0,cooldownMessage:!1,mana:3,manaModifier:0,minSpent:0,minSpentModifier:0,castMessage:"&6{player} &2has cast &6{skill}",indicator:"2D",icon:{material:"Diamond",customModelData:0},triggers:[]}),new g({name:"Poison Dart",type:"Dynamic",maxLevel:40,permission:!1,levelReq:1,levelReqModifier:0,cost:0,costModifier:0,cooldown:0,cooldownModifier:0,cooldownMessage:!1,mana:3,manaModifier:0,minSpent:0,minSpentModifier:0,castMessage:"&6{player} &2has cast &6{skill}",indicator:"2D",icon:{material:"Diamond",customModelData:0},triggers:[]}),new g({name:"Storm",type:"Dynamic",maxLevel:40,permission:!1,levelReq:1,levelReqModifier:0,cost:0,costModifier:0,cooldown:0,cooldownModifier:0,cooldownMessage:!1,mana:3,manaModifier:0,minSpent:0,minSpentModifier:0,castMessage:"&6{player} &2has cast &6{skill}",indicator:"2D",icon:{material:"Diamond",customModelData:0},triggers:[]})];const w=n([new u({name:"Honor Guard",group:"class",manaName:"&2Mana",maxLevel:40,permission:!1,expSources:[],health:20,healthModifier:1,mana:20,manaModifier:1,manaRegen:1,attributes:{vitality:{base:2,modifier:1}},skillTree:"Requirement",skills:[],icon:{material:"Pumpkin",customModelData:0,lore:["This is a class"]},unusableItems:[]}),new u({name:"Assassin",group:"class",manaName:"&2Mana",maxLevel:40,permission:!1,expSources:[],health:20,healthModifier:1,mana:20,manaModifier:1,manaRegen:1,attributes:{vitality:{base:2,modifier:1}},skillTree:"Requirement",skills:[b[0],b[1]],icon:{material:"Pumpkin",customModelData:0,lore:["This is a class"]},unusableItems:[]}),new u({name:"Archer",group:"class",manaName:"&2Mana",maxLevel:40,permission:!1,expSources:[],health:20,healthModifier:1,mana:20,manaModifier:1,manaRegen:1,attributes:{vitality:{base:2,modifier:1}},skillTree:"Requirement",skills:[],icon:{material:"Pumpkin",customModelData:0,lore:["This is a class"]},unusableItems:[]})]),f=n([new h([new h([p(w)[0]])])]),N=(t,e)=>{y.set(t),D.set(e)},P=()=>M.set(!p(M)),C=()=>M.set(!1),F=()=>v.set(!0),B=()=>v.set(!1),O=t=>q.set(t),E=()=>{const t=p(w);t.push(new u({name:"Class "+(t.length+1)})),w.set(t),console.log(t)},x=t=>{if(t.parent)t.parent.deleteFolder(t),L();else{const e=p(f).filter(s=>s!=t);f.set(e)}},L=()=>{f.set(p(f))};export{h as P,D as a,y as b,F as c,x as d,B as e,w as f,f as g,g as h,v as i,u as j,C as k,b as l,E as m,M as n,q as o,N as p,O as s,P as t,L as u};
